# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import db_service_onchain_withdrawals_pb2 as db__service__onchain__withdrawals__pb2
import db_service_request_common_pb2 as db__service__request__common__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class OnchainWithdrawalsDBServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getUserRequests = channel.unary_unary(
        '/io.lightcone.services.onchain_withdrawals_db_service.OnchainWithdrawalsDBService/getUserRequests',
        request_serializer=db__service__request__common__pb2.GetUserRequestsReq.SerializeToString,
        response_deserializer=db__service__onchain__withdrawals__pb2.GetUserRequestsRes.FromString,
        )
    self.getStats = channel.unary_unary(
        '/io.lightcone.services.onchain_withdrawals_db_service.OnchainWithdrawalsDBService/getStats',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=db__service__request__common__pb2.RequestStats.FromString,
        )
    self.getRequestByIds = channel.unary_unary(
        '/io.lightcone.services.onchain_withdrawals_db_service.OnchainWithdrawalsDBService/getRequestByIds',
        request_serializer=db__service__request__common__pb2.GetRequestsReq.SerializeToString,
        response_deserializer=db__service__onchain__withdrawals__pb2.GetRequestsRes.FromString,
        )
    self.startAggregating = channel.unary_unary(
        '/io.lightcone.services.onchain_withdrawals_db_service.OnchainWithdrawalsDBService/startAggregating',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.getByBlockId = channel.unary_unary(
        '/io.lightcone.services.onchain_withdrawals_db_service.OnchainWithdrawalsDBService/getByBlockId',
        request_serializer=db__service__request__common__pb2.GetByBlockIdReq.SerializeToString,
        response_deserializer=db__service__request__common__pb2.GetByBlockIdRes.FromString,
        )
    self.updateTxHashesAndStatus = channel.unary_unary(
        '/io.lightcone.services.onchain_withdrawals_db_service.OnchainWithdrawalsDBService/updateTxHashesAndStatus',
        request_serializer=db__service__request__common__pb2.UpdateTxHashesReq.SerializeToString,
        response_deserializer=db__service__request__common__pb2.UpdateTxHashesRes.FromString,
        )
    self.finishDistributed = channel.unary_unary(
        '/io.lightcone.services.onchain_withdrawals_db_service.OnchainWithdrawalsDBService/finishDistributed',
        request_serializer=db__service__request__common__pb2.FinishDistributedReq.SerializeToString,
        response_deserializer=db__service__request__common__pb2.FinishDistributedRes.FromString,
        )


class OnchainWithdrawalsDBServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getUserRequests(self, request, context):
    """-- For frontends --
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getStats(self, request, context):
    """-- For Internal --
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getRequestByIds(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def startAggregating(self, request, context):
    """schedule job
    1. update requests from RECEIVED to CONFIRMED when over 50 block heights
    2. process CONFIRMED requests to PROCESSED
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getByBlockId(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateTxHashesAndStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def finishDistributed(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OnchainWithdrawalsDBServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getUserRequests': grpc.unary_unary_rpc_method_handler(
          servicer.getUserRequests,
          request_deserializer=db__service__request__common__pb2.GetUserRequestsReq.FromString,
          response_serializer=db__service__onchain__withdrawals__pb2.GetUserRequestsRes.SerializeToString,
      ),
      'getStats': grpc.unary_unary_rpc_method_handler(
          servicer.getStats,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=db__service__request__common__pb2.RequestStats.SerializeToString,
      ),
      'getRequestByIds': grpc.unary_unary_rpc_method_handler(
          servicer.getRequestByIds,
          request_deserializer=db__service__request__common__pb2.GetRequestsReq.FromString,
          response_serializer=db__service__onchain__withdrawals__pb2.GetRequestsRes.SerializeToString,
      ),
      'startAggregating': grpc.unary_unary_rpc_method_handler(
          servicer.startAggregating,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'getByBlockId': grpc.unary_unary_rpc_method_handler(
          servicer.getByBlockId,
          request_deserializer=db__service__request__common__pb2.GetByBlockIdReq.FromString,
          response_serializer=db__service__request__common__pb2.GetByBlockIdRes.SerializeToString,
      ),
      'updateTxHashesAndStatus': grpc.unary_unary_rpc_method_handler(
          servicer.updateTxHashesAndStatus,
          request_deserializer=db__service__request__common__pb2.UpdateTxHashesReq.FromString,
          response_serializer=db__service__request__common__pb2.UpdateTxHashesRes.SerializeToString,
      ),
      'finishDistributed': grpc.unary_unary_rpc_method_handler(
          servicer.finishDistributed,
          request_deserializer=db__service__request__common__pb2.FinishDistributedReq.FromString,
          response_serializer=db__service__request__common__pb2.FinishDistributedRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'io.lightcone.services.onchain_withdrawals_db_service.OnchainWithdrawalsDBService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
