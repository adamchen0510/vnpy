# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import data_blocks_pb2 as data__blocks__pb2
import data_events_pb2 as data__events__pb2
import db_service_blocks_pb2 as db__service__blocks__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


class BlocksDBServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.createEmptyBlock = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/createEmptyBlock',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_wrappers__pb2.UInt64Value.FromString,
        )
    self.updateBlocksProofing = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/updateBlocksProofing',
        request_serializer=db__service__blocks__pb2.UpdateBlocksProofing.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.saveBlockProof = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/saveBlockProof',
        request_serializer=data__blocks__pb2.Block.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.updateBlockCommitted = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/updateBlockCommitted',
        request_serializer=db__service__blocks__pb2.StateChangedAtBlockHeight.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.updateBlockVerified = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/updateBlockVerified',
        request_serializer=db__service__blocks__pb2.StateChangedAtBlockHeight.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.updateBlockFinalized = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/updateBlockFinalized',
        request_serializer=db__service__blocks__pb2.StateChangedAtBlockHeight.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.getBlocks = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/getBlocks',
        request_serializer=db__service__blocks__pb2.GetBlocksReq.SerializeToString,
        response_deserializer=db__service__blocks__pb2.GetBlocksRes.FromString,
        )
    self.getBlocksWithProofState = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/getBlocksWithProofState',
        request_serializer=db__service__blocks__pb2.GetBlocksWithProofState.SerializeToString,
        response_deserializer=db__service__blocks__pb2.GetBlocksRes.FromString,
        )
    self.getBlockToCommit = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/getBlockToCommit',
        request_serializer=google_dot_protobuf_dot_wrappers__pb2.UInt32Value.SerializeToString,
        response_deserializer=db__service__blocks__pb2.GetBlocksRes.FromString,
        )
    self.getBlockToVerify = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/getBlockToVerify',
        request_serializer=google_dot_protobuf_dot_wrappers__pb2.UInt32Value.SerializeToString,
        response_deserializer=db__service__blocks__pb2.GetBlocksRes.FromString,
        )
    self.updateBlockCommitting = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/updateBlockCommitting',
        request_serializer=db__service__blocks__pb2.UpdateBlockCommitting.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.updateBlockVerifying = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/updateBlockVerifying',
        request_serializer=db__service__blocks__pb2.UpdateBlockVerifying.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.processBlockEvent = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/processBlockEvent',
        request_serializer=data__events__pb2.BlockEvent.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.updateBlock = channel.unary_unary(
        '/io.lightcone.services.blocks_db_service.BlocksDBService/updateBlock',
        request_serializer=db__service__blocks__pb2.UpdateBlockReq.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_wrappers__pb2.UInt64Value.FromString,
        )


class BlocksDBServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def createEmptyBlock(self, request, context):
    """Create an EMPTY block and returns the block index. if there is already
    one EMPTY block, this method should throw exception.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateBlocksProofing(self, request, context):
    """Delete any EMPTY block if there is one. There cannot be more than one EMPTY block.
    rpc deleteExistingEmptyBlock(google.protobuf.Empty) returns (google.protobuf.Empty);

    Initlaize the specified EMPTY block (based on block index) with the given type
    and change its state to BATCHED.
    rpc initEmptyBlock(InitEmptyBlockReq) returns (google.protobuf.Empty);

    get next available blockIndex
    rpc getNextBlockIndex(google.protobuf.Empty) returns (google.protobuf.UInt64Value);

    For an existing block (idenified by index), update its `block_data`, and `updated_at`,
    `merkleRootBefore`, `merkleRootAfter`, `state`(to PROCESSED) fields.
    rpc updateBlockProcessed(data.blocks.Block)  returns (google.protobuf.Empty);

    Update a batch blocks's proof_state from INIT to PROOFING, block state should in PROCESSED.
    Will throw ErrorException when not successfully updated all records
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def saveBlockProof(self, request, context):
    """For an existing block (idenified by index), update its `proof`,  `proof_creatd_at`,
    `proof_state` to PROOFED and 'updated_at' fields. All other fields will be ignored.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateBlockCommitted(self, request, context):
    """For an existing block (idenified by index), update its `state` to COMMITTED, `committedAtHeight`
    and 'updated_at' fields.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateBlockVerified(self, request, context):
    """For an existing block (idenified by index), update its `state` to VERIFIED, `verifiedAtHeight`
    and 'updated_at' fields.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateBlockFinalized(self, request, context):
    """For an existing block (idenified by index), update its `state` to FINALIZED, `finalizedAtHeight`
    and 'updated_at' fields.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getBlocks(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getBlocksWithProofState(self, request, context):
    """Get a batch blocks's requests with state in PROCESSED or COMMITED,
    block proof state with given values
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getBlockToCommit(self, request, context):
    """Get a given number of blocks's requests, return blocks with state PROCESSED, commiting is false
    sorted by block_index asc
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getBlockToVerify(self, request, context):
    """Get a given number of blocks's requests, return blocks with state PROCESSED, ProofState is Proofed,
    commiting is false, sorted by block_index asc
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateBlockCommitting(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateBlockVerifying(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def processBlockEvent(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateBlock(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BlocksDBServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'createEmptyBlock': grpc.unary_unary_rpc_method_handler(
          servicer.createEmptyBlock,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=google_dot_protobuf_dot_wrappers__pb2.UInt64Value.SerializeToString,
      ),
      'updateBlocksProofing': grpc.unary_unary_rpc_method_handler(
          servicer.updateBlocksProofing,
          request_deserializer=db__service__blocks__pb2.UpdateBlocksProofing.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'saveBlockProof': grpc.unary_unary_rpc_method_handler(
          servicer.saveBlockProof,
          request_deserializer=data__blocks__pb2.Block.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'updateBlockCommitted': grpc.unary_unary_rpc_method_handler(
          servicer.updateBlockCommitted,
          request_deserializer=db__service__blocks__pb2.StateChangedAtBlockHeight.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'updateBlockVerified': grpc.unary_unary_rpc_method_handler(
          servicer.updateBlockVerified,
          request_deserializer=db__service__blocks__pb2.StateChangedAtBlockHeight.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'updateBlockFinalized': grpc.unary_unary_rpc_method_handler(
          servicer.updateBlockFinalized,
          request_deserializer=db__service__blocks__pb2.StateChangedAtBlockHeight.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'getBlocks': grpc.unary_unary_rpc_method_handler(
          servicer.getBlocks,
          request_deserializer=db__service__blocks__pb2.GetBlocksReq.FromString,
          response_serializer=db__service__blocks__pb2.GetBlocksRes.SerializeToString,
      ),
      'getBlocksWithProofState': grpc.unary_unary_rpc_method_handler(
          servicer.getBlocksWithProofState,
          request_deserializer=db__service__blocks__pb2.GetBlocksWithProofState.FromString,
          response_serializer=db__service__blocks__pb2.GetBlocksRes.SerializeToString,
      ),
      'getBlockToCommit': grpc.unary_unary_rpc_method_handler(
          servicer.getBlockToCommit,
          request_deserializer=google_dot_protobuf_dot_wrappers__pb2.UInt32Value.FromString,
          response_serializer=db__service__blocks__pb2.GetBlocksRes.SerializeToString,
      ),
      'getBlockToVerify': grpc.unary_unary_rpc_method_handler(
          servicer.getBlockToVerify,
          request_deserializer=google_dot_protobuf_dot_wrappers__pb2.UInt32Value.FromString,
          response_serializer=db__service__blocks__pb2.GetBlocksRes.SerializeToString,
      ),
      'updateBlockCommitting': grpc.unary_unary_rpc_method_handler(
          servicer.updateBlockCommitting,
          request_deserializer=db__service__blocks__pb2.UpdateBlockCommitting.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'updateBlockVerifying': grpc.unary_unary_rpc_method_handler(
          servicer.updateBlockVerifying,
          request_deserializer=db__service__blocks__pb2.UpdateBlockVerifying.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'processBlockEvent': grpc.unary_unary_rpc_method_handler(
          servicer.processBlockEvent,
          request_deserializer=data__events__pb2.BlockEvent.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'updateBlock': grpc.unary_unary_rpc_method_handler(
          servicer.updateBlock,
          request_deserializer=db__service__blocks__pb2.UpdateBlockReq.FromString,
          response_serializer=google_dot_protobuf_dot_wrappers__pb2.UInt64Value.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'io.lightcone.services.blocks_db_service.BlocksDBService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
