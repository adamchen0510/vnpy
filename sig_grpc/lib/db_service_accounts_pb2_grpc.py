# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import db_service_accounts_pb2 as db__service__accounts__pb2


class AccountsDBServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.applyApiKey = channel.unary_unary(
        '/io.lightcone.services.accounts_db_service.AccountsDBService/applyApiKey',
        request_serializer=db__service__accounts__pb2.ApplyApiKeyReq.SerializeToString,
        response_deserializer=db__service__accounts__pb2.ApplyApiKeyRes.FromString,
        )
    self.getAccountByApiKey = channel.unary_unary(
        '/io.lightcone.services.accounts_db_service.AccountsDBService/getAccountByApiKey',
        request_serializer=db__service__accounts__pb2.GetAccountByApiKeyReq.SerializeToString,
        response_deserializer=db__service__accounts__pb2.GetAccountRes.FromString,
        )
    self.getAccountByAddress = channel.unary_unary(
        '/io.lightcone.services.accounts_db_service.AccountsDBService/getAccountByAddress',
        request_serializer=db__service__accounts__pb2.GetAccountByAddressReq.SerializeToString,
        response_deserializer=db__service__accounts__pb2.GetAccountRes.FromString,
        )
    self.getAccountByID = channel.unary_unary(
        '/io.lightcone.services.accounts_db_service.AccountsDBService/getAccountByID',
        request_serializer=db__service__accounts__pb2.GetAccountByIDReq.SerializeToString,
        response_deserializer=db__service__accounts__pb2.GetAccountRes.FromString,
        )
    self.freezeAccount = channel.unary_unary(
        '/io.lightcone.services.accounts_db_service.AccountsDBService/freezeAccount',
        request_serializer=db__service__accounts__pb2.FreezeAccountReq.SerializeToString,
        response_deserializer=db__service__accounts__pb2.FreezeAccountRes.FromString,
        )
    self.getAssetsOfSingleAccount = channel.unary_unary(
        '/io.lightcone.services.accounts_db_service.AccountsDBService/getAssetsOfSingleAccount',
        request_serializer=db__service__accounts__pb2.GetAssetsOfSingleAccountReq.SerializeToString,
        response_deserializer=db__service__accounts__pb2.GetAssetsOfSingleAccountRes.FromString,
        )
    self.deposit = channel.unary_unary(
        '/io.lightcone.services.accounts_db_service.AccountsDBService/deposit',
        request_serializer=db__service__accounts__pb2.DepositReq.SerializeToString,
        response_deserializer=db__service__accounts__pb2.ModifyAssetsUniRes.FromString,
        )
    self.withdraw = channel.unary_unary(
        '/io.lightcone.services.accounts_db_service.AccountsDBService/withdraw',
        request_serializer=db__service__accounts__pb2.WithdrawReq.SerializeToString,
        response_deserializer=db__service__accounts__pb2.ModifyAssetsUniRes.FromString,
        )
    self.freezeBalance = channel.unary_unary(
        '/io.lightcone.services.accounts_db_service.AccountsDBService/freezeBalance',
        request_serializer=db__service__accounts__pb2.FreezeBalanceReq.SerializeToString,
        response_deserializer=db__service__accounts__pb2.ModifyAssetsUniRes.FromString,
        )
    self.unfreezeBalance = channel.unary_unary(
        '/io.lightcone.services.accounts_db_service.AccountsDBService/unfreezeBalance',
        request_serializer=db__service__accounts__pb2.UnfreezeBalanceReq.SerializeToString,
        response_deserializer=db__service__accounts__pb2.ModifyAssetsUniRes.FromString,
        )


class AccountsDBServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def applyApiKey(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getAccountByApiKey(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getAccountByAddress(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getAccountByID(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def freezeAccount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getAssetsOfSingleAccount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deposit(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def withdraw(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def freezeBalance(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def unfreezeBalance(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AccountsDBServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'applyApiKey': grpc.unary_unary_rpc_method_handler(
          servicer.applyApiKey,
          request_deserializer=db__service__accounts__pb2.ApplyApiKeyReq.FromString,
          response_serializer=db__service__accounts__pb2.ApplyApiKeyRes.SerializeToString,
      ),
      'getAccountByApiKey': grpc.unary_unary_rpc_method_handler(
          servicer.getAccountByApiKey,
          request_deserializer=db__service__accounts__pb2.GetAccountByApiKeyReq.FromString,
          response_serializer=db__service__accounts__pb2.GetAccountRes.SerializeToString,
      ),
      'getAccountByAddress': grpc.unary_unary_rpc_method_handler(
          servicer.getAccountByAddress,
          request_deserializer=db__service__accounts__pb2.GetAccountByAddressReq.FromString,
          response_serializer=db__service__accounts__pb2.GetAccountRes.SerializeToString,
      ),
      'getAccountByID': grpc.unary_unary_rpc_method_handler(
          servicer.getAccountByID,
          request_deserializer=db__service__accounts__pb2.GetAccountByIDReq.FromString,
          response_serializer=db__service__accounts__pb2.GetAccountRes.SerializeToString,
      ),
      'freezeAccount': grpc.unary_unary_rpc_method_handler(
          servicer.freezeAccount,
          request_deserializer=db__service__accounts__pb2.FreezeAccountReq.FromString,
          response_serializer=db__service__accounts__pb2.FreezeAccountRes.SerializeToString,
      ),
      'getAssetsOfSingleAccount': grpc.unary_unary_rpc_method_handler(
          servicer.getAssetsOfSingleAccount,
          request_deserializer=db__service__accounts__pb2.GetAssetsOfSingleAccountReq.FromString,
          response_serializer=db__service__accounts__pb2.GetAssetsOfSingleAccountRes.SerializeToString,
      ),
      'deposit': grpc.unary_unary_rpc_method_handler(
          servicer.deposit,
          request_deserializer=db__service__accounts__pb2.DepositReq.FromString,
          response_serializer=db__service__accounts__pb2.ModifyAssetsUniRes.SerializeToString,
      ),
      'withdraw': grpc.unary_unary_rpc_method_handler(
          servicer.withdraw,
          request_deserializer=db__service__accounts__pb2.WithdrawReq.FromString,
          response_serializer=db__service__accounts__pb2.ModifyAssetsUniRes.SerializeToString,
      ),
      'freezeBalance': grpc.unary_unary_rpc_method_handler(
          servicer.freezeBalance,
          request_deserializer=db__service__accounts__pb2.FreezeBalanceReq.FromString,
          response_serializer=db__service__accounts__pb2.ModifyAssetsUniRes.SerializeToString,
      ),
      'unfreezeBalance': grpc.unary_unary_rpc_method_handler(
          servicer.unfreezeBalance,
          request_deserializer=db__service__accounts__pb2.UnfreezeBalanceReq.FromString,
          response_serializer=db__service__accounts__pb2.ModifyAssetsUniRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'io.lightcone.services.accounts_db_service.AccountsDBService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
