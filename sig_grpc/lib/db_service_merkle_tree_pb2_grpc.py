# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import data_types_pb2 as data__types__pb2
import db_service_merkle_tree_pb2 as db__service__merkle__tree__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class MerkleTreeServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getBalances = channel.unary_unary(
        '/io.lightcone.services.offchain_accounts_db_service.MerkleTreeService/getBalances',
        request_serializer=db__service__merkle__tree__pb2.GetBalancesReq.SerializeToString,
        response_deserializer=db__service__merkle__tree__pb2.GetBalancesRes.FromString,
        )
    self.getTradeHistory = channel.unary_unary(
        '/io.lightcone.services.offchain_accounts_db_service.MerkleTreeService/getTradeHistory',
        request_serializer=db__service__merkle__tree__pb2.GetTradeHistoryReq.SerializeToString,
        response_deserializer=db__service__merkle__tree__pb2.GetTradeHistoryRes.FromString,
        )
    self.getMerkleTreeRoot = channel.unary_unary(
        '/io.lightcone.services.offchain_accounts_db_service.MerkleTreeService/getMerkleTreeRoot',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=data__types__pb2.MiMCHash.FromString,
        )
    self.getTreeNodes = channel.unary_unary(
        '/io.lightcone.services.offchain_accounts_db_service.MerkleTreeService/getTreeNodes',
        request_serializer=db__service__merkle__tree__pb2.GetTreeNodesReq.SerializeToString,
        response_deserializer=db__service__merkle__tree__pb2.GetTreeNodesRes.FromString,
        )
    self.getTreePath = channel.unary_unary(
        '/io.lightcone.services.offchain_accounts_db_service.MerkleTreeService/getTreePath',
        request_serializer=db__service__merkle__tree__pb2.GetTreePathReq.SerializeToString,
        response_deserializer=db__service__merkle__tree__pb2.GetTreePathRes.FromString,
        )
    self.getLastSavePoint = channel.unary_unary(
        '/io.lightcone.services.offchain_accounts_db_service.MerkleTreeService/getLastSavePoint',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=db__service__merkle__tree__pb2.SavePointRes.FromString,
        )
    self.getLeafNodes = channel.unary_unary(
        '/io.lightcone.services.offchain_accounts_db_service.MerkleTreeService/getLeafNodes',
        request_serializer=db__service__merkle__tree__pb2.GetLeafNodesReq.SerializeToString,
        response_deserializer=db__service__merkle__tree__pb2.GetLeafNodesRes.FromString,
        )
    self.saveTreeNodes = channel.unary_unary(
        '/io.lightcone.services.offchain_accounts_db_service.MerkleTreeService/saveTreeNodes',
        request_serializer=db__service__merkle__tree__pb2.SaveTreeNodeReq.SerializeToString,
        response_deserializer=db__service__merkle__tree__pb2.SaveTreeNodeRes.FromString,
        )


class MerkleTreeServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getBalances(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getTradeHistory(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getMerkleTreeRoot(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getTreeNodes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getTreePath(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getLastSavePoint(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getLeafNodes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def saveTreeNodes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MerkleTreeServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getBalances': grpc.unary_unary_rpc_method_handler(
          servicer.getBalances,
          request_deserializer=db__service__merkle__tree__pb2.GetBalancesReq.FromString,
          response_serializer=db__service__merkle__tree__pb2.GetBalancesRes.SerializeToString,
      ),
      'getTradeHistory': grpc.unary_unary_rpc_method_handler(
          servicer.getTradeHistory,
          request_deserializer=db__service__merkle__tree__pb2.GetTradeHistoryReq.FromString,
          response_serializer=db__service__merkle__tree__pb2.GetTradeHistoryRes.SerializeToString,
      ),
      'getMerkleTreeRoot': grpc.unary_unary_rpc_method_handler(
          servicer.getMerkleTreeRoot,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=data__types__pb2.MiMCHash.SerializeToString,
      ),
      'getTreeNodes': grpc.unary_unary_rpc_method_handler(
          servicer.getTreeNodes,
          request_deserializer=db__service__merkle__tree__pb2.GetTreeNodesReq.FromString,
          response_serializer=db__service__merkle__tree__pb2.GetTreeNodesRes.SerializeToString,
      ),
      'getTreePath': grpc.unary_unary_rpc_method_handler(
          servicer.getTreePath,
          request_deserializer=db__service__merkle__tree__pb2.GetTreePathReq.FromString,
          response_serializer=db__service__merkle__tree__pb2.GetTreePathRes.SerializeToString,
      ),
      'getLastSavePoint': grpc.unary_unary_rpc_method_handler(
          servicer.getLastSavePoint,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=db__service__merkle__tree__pb2.SavePointRes.SerializeToString,
      ),
      'getLeafNodes': grpc.unary_unary_rpc_method_handler(
          servicer.getLeafNodes,
          request_deserializer=db__service__merkle__tree__pb2.GetLeafNodesReq.FromString,
          response_serializer=db__service__merkle__tree__pb2.GetLeafNodesRes.SerializeToString,
      ),
      'saveTreeNodes': grpc.unary_unary_rpc_method_handler(
          servicer.saveTreeNodes,
          request_deserializer=db__service__merkle__tree__pb2.SaveTreeNodeReq.FromString,
          response_serializer=db__service__merkle__tree__pb2.SaveTreeNodeRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'io.lightcone.services.offchain_accounts_db_service.MerkleTreeService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
