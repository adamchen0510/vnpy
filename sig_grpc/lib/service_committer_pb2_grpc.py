# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import service_blockchain_delegate_pb2 as service__blockchain__delegate__pb2
import service_committer_pb2 as service__committer__pb2


class CommitterServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.sendTx = channel.unary_unary(
        '/io.lightcone.services.comitter_service.CommitterService/sendTx',
        request_serializer=service__committer__pb2.SendTxReq.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.SendRawTransaction.Res.FromString,
        )
    self.getRecommendedGasPrice = channel.unary_unary(
        '/io.lightcone.services.comitter_service.CommitterService/getRecommendedGasPrice',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=service__committer__pb2.GetRecommendedGasPrice.Res.FromString,
        )


class CommitterServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def sendTx(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getRecommendedGasPrice(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CommitterServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'sendTx': grpc.unary_unary_rpc_method_handler(
          servicer.sendTx,
          request_deserializer=service__committer__pb2.SendTxReq.FromString,
          response_serializer=service__blockchain__delegate__pb2.SendRawTransaction.Res.SerializeToString,
      ),
      'getRecommendedGasPrice': grpc.unary_unary_rpc_method_handler(
          servicer.getRecommendedGasPrice,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=service__committer__pb2.GetRecommendedGasPrice.Res.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'io.lightcone.services.comitter_service.CommitterService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
