# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import db_service_orders_pb2 as db__service__orders__pb2


class OrdersDBServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.submitOrder = channel.unary_unary(
        '/io.lightcone.services.orders_db_service.OrdersDBService/submitOrder',
        request_serializer=db__service__orders__pb2.SubmitOrderReq.SerializeToString,
        response_deserializer=db__service__orders__pb2.SubmitOrderRes.FromString,
        )
    self.cancelOrderByHash = channel.unary_unary(
        '/io.lightcone.services.orders_db_service.OrdersDBService/cancelOrderByHash',
        request_serializer=db__service__orders__pb2.CancelOrderByHashReq.SerializeToString,
        response_deserializer=db__service__orders__pb2.CancelOrderRes.FromString,
        )
    self.cancelOrderByAccountId = channel.unary_unary(
        '/io.lightcone.services.orders_db_service.OrdersDBService/cancelOrderByAccountId',
        request_serializer=db__service__orders__pb2.CancelOrderByAccountIdReq.SerializeToString,
        response_deserializer=db__service__orders__pb2.CancelOrderRes.FromString,
        )
    self.cancelOrderByClientOrderId = channel.unary_unary(
        '/io.lightcone.services.orders_db_service.OrdersDBService/cancelOrderByClientOrderId',
        request_serializer=db__service__orders__pb2.CancelOrderByClientOrderIdReq.SerializeToString,
        response_deserializer=db__service__orders__pb2.CancelOrderRes.FromString,
        )
    self.getOrders = channel.unary_unary(
        '/io.lightcone.services.orders_db_service.OrdersDBService/getOrders',
        request_serializer=db__service__orders__pb2.GetOrdersReq.SerializeToString,
        response_deserializer=db__service__orders__pb2.GetOrdersRes.FromString,
        )
    self.getMatchableOrders = channel.unary_unary(
        '/io.lightcone.services.orders_db_service.OrdersDBService/getMatchableOrders',
        request_serializer=db__service__orders__pb2.GetMatchableOrdersReq.SerializeToString,
        response_deserializer=db__service__orders__pb2.GetMatchableOrdersRes.FromString,
        )
    self.getOrderByHash = channel.unary_unary(
        '/io.lightcone.services.orders_db_service.OrdersDBService/getOrderByHash',
        request_serializer=db__service__orders__pb2.GetOrderByHashReq.SerializeToString,
        response_deserializer=db__service__orders__pb2.GetOrderRes.FromString,
        )
    self.getOrderByOrderID = channel.unary_unary(
        '/io.lightcone.services.orders_db_service.OrdersDBService/getOrderByOrderID',
        request_serializer=db__service__orders__pb2.GetOrderByOrderIDReq.SerializeToString,
        response_deserializer=db__service__orders__pb2.GetOrderRes.FromString,
        )
    self.getOrderByClientOrderId = channel.unary_unary(
        '/io.lightcone.services.orders_db_service.OrdersDBService/getOrderByClientOrderId',
        request_serializer=db__service__orders__pb2.GetOrderByClientOrderIdReq.SerializeToString,
        response_deserializer=db__service__orders__pb2.GetOrderRes.FromString,
        )
    self.pick = channel.unary_unary(
        '/io.lightcone.services.orders_db_service.OrdersDBService/pick',
        request_serializer=db__service__orders__pb2.PickOrderIDReq.SerializeToString,
        response_deserializer=db__service__orders__pb2.PickOrderIDRes.FromString,
        )


class OrdersDBServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def submitOrder(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def cancelOrderByHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def cancelOrderByAccountId(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def cancelOrderByClientOrderId(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getOrders(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getMatchableOrders(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getOrderByHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getOrderByOrderID(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getOrderByClientOrderId(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def pick(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OrdersDBServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'submitOrder': grpc.unary_unary_rpc_method_handler(
          servicer.submitOrder,
          request_deserializer=db__service__orders__pb2.SubmitOrderReq.FromString,
          response_serializer=db__service__orders__pb2.SubmitOrderRes.SerializeToString,
      ),
      'cancelOrderByHash': grpc.unary_unary_rpc_method_handler(
          servicer.cancelOrderByHash,
          request_deserializer=db__service__orders__pb2.CancelOrderByHashReq.FromString,
          response_serializer=db__service__orders__pb2.CancelOrderRes.SerializeToString,
      ),
      'cancelOrderByAccountId': grpc.unary_unary_rpc_method_handler(
          servicer.cancelOrderByAccountId,
          request_deserializer=db__service__orders__pb2.CancelOrderByAccountIdReq.FromString,
          response_serializer=db__service__orders__pb2.CancelOrderRes.SerializeToString,
      ),
      'cancelOrderByClientOrderId': grpc.unary_unary_rpc_method_handler(
          servicer.cancelOrderByClientOrderId,
          request_deserializer=db__service__orders__pb2.CancelOrderByClientOrderIdReq.FromString,
          response_serializer=db__service__orders__pb2.CancelOrderRes.SerializeToString,
      ),
      'getOrders': grpc.unary_unary_rpc_method_handler(
          servicer.getOrders,
          request_deserializer=db__service__orders__pb2.GetOrdersReq.FromString,
          response_serializer=db__service__orders__pb2.GetOrdersRes.SerializeToString,
      ),
      'getMatchableOrders': grpc.unary_unary_rpc_method_handler(
          servicer.getMatchableOrders,
          request_deserializer=db__service__orders__pb2.GetMatchableOrdersReq.FromString,
          response_serializer=db__service__orders__pb2.GetMatchableOrdersRes.SerializeToString,
      ),
      'getOrderByHash': grpc.unary_unary_rpc_method_handler(
          servicer.getOrderByHash,
          request_deserializer=db__service__orders__pb2.GetOrderByHashReq.FromString,
          response_serializer=db__service__orders__pb2.GetOrderRes.SerializeToString,
      ),
      'getOrderByOrderID': grpc.unary_unary_rpc_method_handler(
          servicer.getOrderByOrderID,
          request_deserializer=db__service__orders__pb2.GetOrderByOrderIDReq.FromString,
          response_serializer=db__service__orders__pb2.GetOrderRes.SerializeToString,
      ),
      'getOrderByClientOrderId': grpc.unary_unary_rpc_method_handler(
          servicer.getOrderByClientOrderId,
          request_deserializer=db__service__orders__pb2.GetOrderByClientOrderIdReq.FromString,
          response_serializer=db__service__orders__pb2.GetOrderRes.SerializeToString,
      ),
      'pick': grpc.unary_unary_rpc_method_handler(
          servicer.pick,
          request_deserializer=db__service__orders__pb2.PickOrderIDReq.FromString,
          response_serializer=db__service__orders__pb2.PickOrderIDRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'io.lightcone.services.orders_db_service.OrdersDBService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
