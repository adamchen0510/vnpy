# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import service_blockchain_delegate_pb2 as service__blockchain__delegate__pb2


class BlockchainDelegateServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.requestEther = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/requestEther',
        request_serializer=service__blockchain__delegate__pb2.JsonRpc.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.JsonRpc.Response.FromString,
        )
    self.getBlockNum = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getBlockNum',
        request_serializer=service__blockchain__delegate__pb2.GetBlockNumber.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetBlockNumber.Res.FromString,
        )
    self.ethCall = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/ethCall',
        request_serializer=service__blockchain__delegate__pb2.EthCall.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.EthCall.Res.FromString,
        )
    self.getEthBalance = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getEthBalance',
        request_serializer=service__blockchain__delegate__pb2.EthGetBalance.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.EthGetBalance.Res.FromString,
        )
    self.batchGetEthBalance = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/batchGetEthBalance',
        request_serializer=service__blockchain__delegate__pb2.BatchGetEthBalance.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.BatchGetEthBalance.Res.FromString,
        )
    self.getTransactionByHash = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getTransactionByHash',
        request_serializer=service__blockchain__delegate__pb2.GetTransactionByHash.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetTransactionByHash.Res.FromString,
        )
    self.getTransactionReceipt = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getTransactionReceipt',
        request_serializer=service__blockchain__delegate__pb2.GetTransactionReceipt.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetTransactionReceipt.Res.FromString,
        )
    self.getBlockWithTxHashByNumber = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getBlockWithTxHashByNumber',
        request_serializer=service__blockchain__delegate__pb2.GetBlockWithTxHashByNumber.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetBlockWithTxHashByNumber.Res.FromString,
        )
    self.getBlockWithTxObjectByNumber = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getBlockWithTxObjectByNumber',
        request_serializer=service__blockchain__delegate__pb2.GetBlockWithTxObjectByNumber.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetBlockWithTxObjectByNumber.Res.FromString,
        )
    self.getBlockWithTxHashByHash = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getBlockWithTxHashByHash',
        request_serializer=service__blockchain__delegate__pb2.GetBlockWithTxHashByHash.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetBlockWithTxHashByHash.Res.FromString,
        )
    self.getBlockWithTxObjectByHash = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getBlockWithTxObjectByHash',
        request_serializer=service__blockchain__delegate__pb2.GetBlockWithTxObjectByHash.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetBlockWithTxObjectByHash.Res.FromString,
        )
    self.traceTransaction = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/traceTransaction',
        request_serializer=service__blockchain__delegate__pb2.TraceTransaction.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.TraceTransaction.Res.FromString,
        )
    self.getEstimatedGas = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getEstimatedGas',
        request_serializer=service__blockchain__delegate__pb2.GetEstimatedGas.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetEstimatedGas.Res.FromString,
        )
    self.getNonce = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getNonce',
        request_serializer=service__blockchain__delegate__pb2.GetNonce.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetNonce.Res.FromString,
        )
    self.getBlockTransactionCount = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getBlockTransactionCount',
        request_serializer=service__blockchain__delegate__pb2.GetBlockTransactionCount.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetBlockTransactionCount.Res.FromString,
        )
    self.batchCallContracts = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/batchCallContracts',
        request_serializer=service__blockchain__delegate__pb2.BatchCallContracts.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.BatchCallContracts.Res.FromString,
        )
    self.batchGetTransactions = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/batchGetTransactions',
        request_serializer=service__blockchain__delegate__pb2.BatchGetTransactions.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.BatchGetTransactions.Res.FromString,
        )
    self.batchGetTransactionReceipts = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/batchGetTransactionReceipts',
        request_serializer=service__blockchain__delegate__pb2.BatchGetTransactionReceipts.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.BatchGetTransactionReceipts.Res.FromString,
        )
    self.sendRawTransaction = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/sendRawTransaction',
        request_serializer=service__blockchain__delegate__pb2.SendRawTransaction.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.SendRawTransaction.Res.FromString,
        )
    self.getUncle = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getUncle',
        request_serializer=service__blockchain__delegate__pb2.GetUncle.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetBlockWithTxHashByHash.Res.FromString,
        )
    self.batchGetUncle = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/batchGetUncle',
        request_serializer=service__blockchain__delegate__pb2.BatchGetUncle.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.BatchGetUncle.Res.FromString,
        )
    self.getDepositRequestHash = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getDepositRequestHash',
        request_serializer=service__blockchain__delegate__pb2.GetDepositRequestHash.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetDepositRequestHash.Res.FromString,
        )
    self.batchGetDepositRequestHash = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/batchGetDepositRequestHash',
        request_serializer=service__blockchain__delegate__pb2.BatchGetDepositRequestHash.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.BatchGetDepositRequestHash.Res.FromString,
        )
    self.getOnchainWithdrawalRequestHash = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getOnchainWithdrawalRequestHash',
        request_serializer=service__blockchain__delegate__pb2.GetOnchainWithdrawalRequestHash.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetOnchainWithdrawalRequestHash.Res.FromString,
        )
    self.batchGetOnchainWithdrawalRequestHash = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/batchGetOnchainWithdrawalRequestHash',
        request_serializer=service__blockchain__delegate__pb2.BatchGetOnchainWithdrawalRequestHash.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.BatchGetOnchainWithdrawalRequestHash.Res.FromString,
        )
    self.getMaxNodeHeight = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getMaxNodeHeight',
        request_serializer=service__blockchain__delegate__pb2.GetMaxNodeHeight.Req.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetMaxNodeHeight.Res.FromString,
        )
    self.batchGetAccount = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/batchGetAccount',
        request_serializer=service__blockchain__delegate__pb2.BatchGetAccount.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.BatchGetAccount.Res.FromString,
        )
    self.batchGetTokenID = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/batchGetTokenID',
        request_serializer=service__blockchain__delegate__pb2.BatchGetTokenID.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.BatchGetTokenID.Res.FromString,
        )
    self.getExchangeFees = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getExchangeFees',
        request_serializer=service__blockchain__delegate__pb2.GetExchangeFees.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetExchangeFees.Res.FromString,
        )
    self.getProtocolFees = channel.unary_unary(
        '/io.lightcone.services.blockchain_delegate.BlockchainDelegateService/getProtocolFees',
        request_serializer=service__blockchain__delegate__pb2.GetProtocolFees.RequestWithHeight.SerializeToString,
        response_deserializer=service__blockchain__delegate__pb2.GetProtocolFees.Res.FromString,
        )


class BlockchainDelegateServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def requestEther(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getBlockNum(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ethCall(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getEthBalance(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def batchGetEthBalance(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getTransactionByHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getTransactionReceipt(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getBlockWithTxHashByNumber(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getBlockWithTxObjectByNumber(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getBlockWithTxHashByHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getBlockWithTxObjectByHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def traceTransaction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getEstimatedGas(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getNonce(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getBlockTransactionCount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def batchCallContracts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def batchGetTransactions(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def batchGetTransactionReceipts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def sendRawTransaction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getUncle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def batchGetUncle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getDepositRequestHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def batchGetDepositRequestHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getOnchainWithdrawalRequestHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def batchGetOnchainWithdrawalRequestHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getMaxNodeHeight(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def batchGetAccount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def batchGetTokenID(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getExchangeFees(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getProtocolFees(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BlockchainDelegateServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'requestEther': grpc.unary_unary_rpc_method_handler(
          servicer.requestEther,
          request_deserializer=service__blockchain__delegate__pb2.JsonRpc.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.JsonRpc.Response.SerializeToString,
      ),
      'getBlockNum': grpc.unary_unary_rpc_method_handler(
          servicer.getBlockNum,
          request_deserializer=service__blockchain__delegate__pb2.GetBlockNumber.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetBlockNumber.Res.SerializeToString,
      ),
      'ethCall': grpc.unary_unary_rpc_method_handler(
          servicer.ethCall,
          request_deserializer=service__blockchain__delegate__pb2.EthCall.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.EthCall.Res.SerializeToString,
      ),
      'getEthBalance': grpc.unary_unary_rpc_method_handler(
          servicer.getEthBalance,
          request_deserializer=service__blockchain__delegate__pb2.EthGetBalance.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.EthGetBalance.Res.SerializeToString,
      ),
      'batchGetEthBalance': grpc.unary_unary_rpc_method_handler(
          servicer.batchGetEthBalance,
          request_deserializer=service__blockchain__delegate__pb2.BatchGetEthBalance.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.BatchGetEthBalance.Res.SerializeToString,
      ),
      'getTransactionByHash': grpc.unary_unary_rpc_method_handler(
          servicer.getTransactionByHash,
          request_deserializer=service__blockchain__delegate__pb2.GetTransactionByHash.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetTransactionByHash.Res.SerializeToString,
      ),
      'getTransactionReceipt': grpc.unary_unary_rpc_method_handler(
          servicer.getTransactionReceipt,
          request_deserializer=service__blockchain__delegate__pb2.GetTransactionReceipt.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetTransactionReceipt.Res.SerializeToString,
      ),
      'getBlockWithTxHashByNumber': grpc.unary_unary_rpc_method_handler(
          servicer.getBlockWithTxHashByNumber,
          request_deserializer=service__blockchain__delegate__pb2.GetBlockWithTxHashByNumber.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetBlockWithTxHashByNumber.Res.SerializeToString,
      ),
      'getBlockWithTxObjectByNumber': grpc.unary_unary_rpc_method_handler(
          servicer.getBlockWithTxObjectByNumber,
          request_deserializer=service__blockchain__delegate__pb2.GetBlockWithTxObjectByNumber.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetBlockWithTxObjectByNumber.Res.SerializeToString,
      ),
      'getBlockWithTxHashByHash': grpc.unary_unary_rpc_method_handler(
          servicer.getBlockWithTxHashByHash,
          request_deserializer=service__blockchain__delegate__pb2.GetBlockWithTxHashByHash.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetBlockWithTxHashByHash.Res.SerializeToString,
      ),
      'getBlockWithTxObjectByHash': grpc.unary_unary_rpc_method_handler(
          servicer.getBlockWithTxObjectByHash,
          request_deserializer=service__blockchain__delegate__pb2.GetBlockWithTxObjectByHash.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetBlockWithTxObjectByHash.Res.SerializeToString,
      ),
      'traceTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.traceTransaction,
          request_deserializer=service__blockchain__delegate__pb2.TraceTransaction.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.TraceTransaction.Res.SerializeToString,
      ),
      'getEstimatedGas': grpc.unary_unary_rpc_method_handler(
          servicer.getEstimatedGas,
          request_deserializer=service__blockchain__delegate__pb2.GetEstimatedGas.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetEstimatedGas.Res.SerializeToString,
      ),
      'getNonce': grpc.unary_unary_rpc_method_handler(
          servicer.getNonce,
          request_deserializer=service__blockchain__delegate__pb2.GetNonce.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetNonce.Res.SerializeToString,
      ),
      'getBlockTransactionCount': grpc.unary_unary_rpc_method_handler(
          servicer.getBlockTransactionCount,
          request_deserializer=service__blockchain__delegate__pb2.GetBlockTransactionCount.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetBlockTransactionCount.Res.SerializeToString,
      ),
      'batchCallContracts': grpc.unary_unary_rpc_method_handler(
          servicer.batchCallContracts,
          request_deserializer=service__blockchain__delegate__pb2.BatchCallContracts.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.BatchCallContracts.Res.SerializeToString,
      ),
      'batchGetTransactions': grpc.unary_unary_rpc_method_handler(
          servicer.batchGetTransactions,
          request_deserializer=service__blockchain__delegate__pb2.BatchGetTransactions.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.BatchGetTransactions.Res.SerializeToString,
      ),
      'batchGetTransactionReceipts': grpc.unary_unary_rpc_method_handler(
          servicer.batchGetTransactionReceipts,
          request_deserializer=service__blockchain__delegate__pb2.BatchGetTransactionReceipts.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.BatchGetTransactionReceipts.Res.SerializeToString,
      ),
      'sendRawTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.sendRawTransaction,
          request_deserializer=service__blockchain__delegate__pb2.SendRawTransaction.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.SendRawTransaction.Res.SerializeToString,
      ),
      'getUncle': grpc.unary_unary_rpc_method_handler(
          servicer.getUncle,
          request_deserializer=service__blockchain__delegate__pb2.GetUncle.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetBlockWithTxHashByHash.Res.SerializeToString,
      ),
      'batchGetUncle': grpc.unary_unary_rpc_method_handler(
          servicer.batchGetUncle,
          request_deserializer=service__blockchain__delegate__pb2.BatchGetUncle.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.BatchGetUncle.Res.SerializeToString,
      ),
      'getDepositRequestHash': grpc.unary_unary_rpc_method_handler(
          servicer.getDepositRequestHash,
          request_deserializer=service__blockchain__delegate__pb2.GetDepositRequestHash.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetDepositRequestHash.Res.SerializeToString,
      ),
      'batchGetDepositRequestHash': grpc.unary_unary_rpc_method_handler(
          servicer.batchGetDepositRequestHash,
          request_deserializer=service__blockchain__delegate__pb2.BatchGetDepositRequestHash.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.BatchGetDepositRequestHash.Res.SerializeToString,
      ),
      'getOnchainWithdrawalRequestHash': grpc.unary_unary_rpc_method_handler(
          servicer.getOnchainWithdrawalRequestHash,
          request_deserializer=service__blockchain__delegate__pb2.GetOnchainWithdrawalRequestHash.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetOnchainWithdrawalRequestHash.Res.SerializeToString,
      ),
      'batchGetOnchainWithdrawalRequestHash': grpc.unary_unary_rpc_method_handler(
          servicer.batchGetOnchainWithdrawalRequestHash,
          request_deserializer=service__blockchain__delegate__pb2.BatchGetOnchainWithdrawalRequestHash.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.BatchGetOnchainWithdrawalRequestHash.Res.SerializeToString,
      ),
      'getMaxNodeHeight': grpc.unary_unary_rpc_method_handler(
          servicer.getMaxNodeHeight,
          request_deserializer=service__blockchain__delegate__pb2.GetMaxNodeHeight.Req.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetMaxNodeHeight.Res.SerializeToString,
      ),
      'batchGetAccount': grpc.unary_unary_rpc_method_handler(
          servicer.batchGetAccount,
          request_deserializer=service__blockchain__delegate__pb2.BatchGetAccount.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.BatchGetAccount.Res.SerializeToString,
      ),
      'batchGetTokenID': grpc.unary_unary_rpc_method_handler(
          servicer.batchGetTokenID,
          request_deserializer=service__blockchain__delegate__pb2.BatchGetTokenID.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.BatchGetTokenID.Res.SerializeToString,
      ),
      'getExchangeFees': grpc.unary_unary_rpc_method_handler(
          servicer.getExchangeFees,
          request_deserializer=service__blockchain__delegate__pb2.GetExchangeFees.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetExchangeFees.Res.SerializeToString,
      ),
      'getProtocolFees': grpc.unary_unary_rpc_method_handler(
          servicer.getProtocolFees,
          request_deserializer=service__blockchain__delegate__pb2.GetProtocolFees.RequestWithHeight.FromString,
          response_serializer=service__blockchain__delegate__pb2.GetProtocolFees.Res.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'io.lightcone.services.blockchain_delegate.BlockchainDelegateService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
