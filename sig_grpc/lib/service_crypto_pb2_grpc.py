# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import service_crypto_pb2 as service__crypto__pb2


class CryptoServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.verify = channel.unary_unary(
        '/io.lightcone.services.crypto_service.CryptoService/verify',
        request_serializer=service__crypto__pb2.VerifyRequest.SerializeToString,
        response_deserializer=service__crypto__pb2.VerifyResponse.FromString,
        )
    self.generateKeyPair = channel.unary_unary(
        '/io.lightcone.services.crypto_service.CryptoService/generateKeyPair',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=service__crypto__pb2.KeyPairResponse.FromString,
        )
    self.getPublicKeyFromPrivate = channel.unary_unary(
        '/io.lightcone.services.crypto_service.CryptoService/getPublicKeyFromPrivate',
        request_serializer=service__crypto__pb2.KeyPairRequest.SerializeToString,
        response_deserializer=service__crypto__pb2.KeyPairResponse.FromString,
        )
    self.sign = channel.unary_unary(
        '/io.lightcone.services.crypto_service.CryptoService/sign',
        request_serializer=service__crypto__pb2.SignRequest.SerializeToString,
        response_deserializer=service__crypto__pb2.SignResponse.FromString,
        )
    self.signOrder = channel.unary_unary(
        '/io.lightcone.services.crypto_service.CryptoService/signOrder',
        request_serializer=service__crypto__pb2.SignOrderRequest.SerializeToString,
        response_deserializer=service__crypto__pb2.SignResponse.FromString,
        )
    self.signRing = channel.unary_unary(
        '/io.lightcone.services.crypto_service.CryptoService/signRing',
        request_serializer=service__crypto__pb2.SignRingRequest.SerializeToString,
        response_deserializer=service__crypto__pb2.SignRingResponse.FromString,
        )
    self.signOffchainWithdrawal = channel.unary_unary(
        '/io.lightcone.services.crypto_service.CryptoService/signOffchainWithdrawal',
        request_serializer=service__crypto__pb2.SignOffchainWithdrawalRequest.SerializeToString,
        response_deserializer=service__crypto__pb2.SignResponse.FromString,
        )
    self.signCancellation = channel.unary_unary(
        '/io.lightcone.services.crypto_service.CryptoService/signCancellation',
        request_serializer=service__crypto__pb2.SignCancellationRequest.SerializeToString,
        response_deserializer=service__crypto__pb2.SignResponse.FromString,
        )


class CryptoServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def verify(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def generateKeyPair(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getPublicKeyFromPrivate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def sign(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def signOrder(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def signRing(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def signOffchainWithdrawal(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def signCancellation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CryptoServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'verify': grpc.unary_unary_rpc_method_handler(
          servicer.verify,
          request_deserializer=service__crypto__pb2.VerifyRequest.FromString,
          response_serializer=service__crypto__pb2.VerifyResponse.SerializeToString,
      ),
      'generateKeyPair': grpc.unary_unary_rpc_method_handler(
          servicer.generateKeyPair,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=service__crypto__pb2.KeyPairResponse.SerializeToString,
      ),
      'getPublicKeyFromPrivate': grpc.unary_unary_rpc_method_handler(
          servicer.getPublicKeyFromPrivate,
          request_deserializer=service__crypto__pb2.KeyPairRequest.FromString,
          response_serializer=service__crypto__pb2.KeyPairResponse.SerializeToString,
      ),
      'sign': grpc.unary_unary_rpc_method_handler(
          servicer.sign,
          request_deserializer=service__crypto__pb2.SignRequest.FromString,
          response_serializer=service__crypto__pb2.SignResponse.SerializeToString,
      ),
      'signOrder': grpc.unary_unary_rpc_method_handler(
          servicer.signOrder,
          request_deserializer=service__crypto__pb2.SignOrderRequest.FromString,
          response_serializer=service__crypto__pb2.SignResponse.SerializeToString,
      ),
      'signRing': grpc.unary_unary_rpc_method_handler(
          servicer.signRing,
          request_deserializer=service__crypto__pb2.SignRingRequest.FromString,
          response_serializer=service__crypto__pb2.SignRingResponse.SerializeToString,
      ),
      'signOffchainWithdrawal': grpc.unary_unary_rpc_method_handler(
          servicer.signOffchainWithdrawal,
          request_deserializer=service__crypto__pb2.SignOffchainWithdrawalRequest.FromString,
          response_serializer=service__crypto__pb2.SignResponse.SerializeToString,
      ),
      'signCancellation': grpc.unary_unary_rpc_method_handler(
          servicer.signCancellation,
          request_deserializer=service__crypto__pb2.SignCancellationRequest.FromString,
          response_serializer=service__crypto__pb2.SignResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'io.lightcone.services.crypto_service.CryptoService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
